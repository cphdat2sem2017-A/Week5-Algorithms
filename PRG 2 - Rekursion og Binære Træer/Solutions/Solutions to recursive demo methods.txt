
// Show simple recursive implementations
// hau
public class SimpleDemo 
{
//============================

    //-- sum all numbers from 1 to t
    public int sumIter(int t)
    {
            int res = 0 ;
            for (int i=0 ; i<= t;  i++)
                    res += i;
            return res;
    }

    public int sumRec(int t)
    {
            if (t == 1)
                    return t;
            else
                    return (t + sumRec(t-1));
    }
    
    //============================
    //-- calculate the factorial of n  (n!)
    public int factorial(int n)
    {
            if (n==0)
                return 1;
            else
                return n*factorial(n-1);
    }
    
   
    //============================
    public int multIter(int m,int n)
    {
            int res =0;
            for(int i=1 ; i<= n;i++)
                    res += m;
            return res;
    }
    
    public int multRec(int m,int n)
    {
      if (m==0 || n==0) 
            return 0;
      else 
            return m + multRec(m,n-1);
    }
     

    
    //============================
    public void hanoi(int n, int from, int to, int temp)
    {
    // divide and conquer
            if (1<n) 
            hanoi(n-1,from,temp,to);
            System.out.println("Move disc " + n + " from  " + from + " to " + to);
            if (1<n)
            hanoi(n-1,temp,to,from);
    }
      
    //============================
      public boolean palindrom(String ord)
      {
        if (ord.length()<=1) return true;
        else return (ord.charAt(0)==ord.charAt(ord.length()-1) &&
                     palindrom(ord.substring(1,ord.length()-1)));
      }
    
      //============================

  	public int fibonacci (int n)
   	 {
       	 if (n <= 2)
            return 1;
       	 else
            return fibonacci(n-1)+ fibonacci(n-2);
   	 }

    //=========================================
    
    
    public static void main(String args[]) 
    {
    
    SimpleDemo d = new SimpleDemo();
    
    System.out.println(d.sumIter(10));
    System.out.println(d.sumRec(10));
    System.out.println(d.factorial(10));
    System.out.println("2*6 = " + d.multIter(2,6));
    System.out.println("2*6 = " + d.multRec(2,6));
    d.hanoi(4,1,3,2);
    System.out.println(d.palindrome("regninger"));
    System.out.println("Fibonacci 7: " + d.fibonacci(7));
    }
    }
}
